import { NextResponse } from 'next/server'
// import Cookies from "cookies"; // Assure-toi que "cookies" est installÃ© via npm
// import Cookies from 'js-cookie';

export function middleware (req) {
  // ğŸ”¹ AccÃ©der aux cookies dans la requÃªte (cÃ´tÃ© serveur)
  const role = req.cookies.get('user_role')?.value

  // ğŸ”¹ DÃ©finir les routes protrdÃ©gÃ©es
  const adminRoutes = ['/dashboard', '/dashboard/reservations', '/dashboard/cars']
  // const userRoutes = ['/']

  // ğŸ”¹ VÃ©rification pour les pages admin
  if (adminRoutes.includes(req.nextUrl.pathname) && role !== 'admin') {
    return NextResponse.redirect(new URL('/', req.url)) // Redirection si le rÃ´le n'est pas admin
  }

  // ğŸ”¹ VÃ©rification pour les pages utilisateurs
  // if (userRoutes.includes(req.nextUrl.pathname) && role !== 'user') {
  //   return NextResponse.redirect(new URL('/', req.url)) // Redirection si le rÃ´le n'est pas user
  // }

  // ğŸ”¹ Si tout est bon, laisser passer la requÃªte
  return NextResponse.next()
}

export const config = {
  matcher: ['/dashboard'] // Appliquer Ã  ces routes protÃ©gÃ©es
}
